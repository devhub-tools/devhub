<div class="grid h-screen grid-cols-1 bg-blue-50 text-gray-900 lg:grid-cols-2">
  <div class="flex h-screen flex-col justify-center">
    <div class="w-[400px] mx-auto rounded-lg border border-blue-400 bg-blue-200 p-10 text-center">
      <img class="mx-auto h-16 w-auto" src="/images/querydesk-logo.svg" alt="QueryDesk" />
      <h1 class="mt-4 text-2xl font-bold">Welcome to QueryDesk</h1>
      <h2 class="text-gray-700">Verify your MFA</h2>

      <div class="my-6 flex flex-col gap-4">
        <button
          id="manual-button"
          class="flex w-full items-center justify-center gap-1 rounded-md bg-blue-300 py-3.5 text-gray-800 ring-inset ring-blue-600 hover:bg-blue-400 hover:ring-1 focus-visible:ring-transparent"
        >
          <img src="/images/fido.svg" class="size-6" />
          <span class="font-medium">Passkey</span>
        </button>
      </div>
      <p class="text-sm/5 text-center text-gray-700">
        Having trouble? For support, contact
        <a href="mailto:support@devhub.tools" class="text-blue-700 hover:text-blue-600">
          support@devhub.tools
        </a>
      </p>
    </div>
  </div>
  <div class="relative m-6 hidden overflow-hidden rounded-2xl bg-blue-600 p-12 lg:flex">
    <div class="bg-[url('/images/login-bg.png')] absolute inset-0 z-0 bg-repeat opacity-30 bg-[length:824px_588px]" />
    <div class="bg-[linear-gradient(to_top,rgba(8,17,31,0.9),rgba(18,52,106,0.2))] absolute inset-0 z-0" />
    <div class="absolute inset-0 z-0 overflow-hidden">
      <!-- Shooting star logos -->
      <div class="animate-[shooting-star_3s_ease-in-out_infinite] absolute top-1/4 left-1/4">
        <img src="/images/logo.svg" class="size-8 opacity-20" alt="" />
      </div>
      <div class="animate-[shooting-star_4s_ease-in-out_infinite] absolute top-1/3 left-1/3">
        <img src="/images/logo.svg" class="size-8 opacity-15" alt="" />
      </div>
      <div class="left-1/6 animate-[shooting-star_3.5s_ease-in-out_infinite] absolute top-1/2">
        <img src="/images/logo.svg" class="size-10 opacity-25" alt="" />
      </div>
      <div class="animate-[shooting-star_4.5s_ease-in-out_infinite] absolute top-2/3 left-1/4">
        <img src="/images/logo.svg" class="size-8 opacity-20" alt="" />
      </div>
      <div class="animate-[shooting-star_3.2s_ease-in-out_infinite] absolute top-3/4 left-1/3">
        <img src="/images/logo.svg" class="size-7 opacity-15" alt="" />
      </div>
    </div>
    <div class="bg-[url('/images/pattern.svg')] absolute inset-0 z-0 bg-repeat opacity-5" />
    <div class="flex flex-col justify-end">
      <div class="z-10 flex flex-col gap-y-3">
        <div class="flex gap-x-2">
          <.link
            href="https://github.com/devhub-tools"
            target="_blank"
            class="size-8 flex items-center justify-center rounded border border-gray-900"
          >
            <svg
              width="32"
              height="32"
              viewBox="0 0 32 32"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M21.5 14.5V15C21.4989 15.846 21.1918 16.6631 20.6354 17.3003C20.0789 17.9375 19.3107 18.3519 18.4725 18.4669C18.8146 18.9047 19.0003 19.4444 19 20V22.5C19 22.6326 18.9473 22.7598 18.8536 22.8536C18.7598 22.9473 18.6326 23 18.5 23H14.5C14.3674 23 14.2402 22.9473 14.1464 22.8536C14.0527 22.7598 14 22.6326 14 22.5V21.5H12.5C11.837 21.5 11.2011 21.2366 10.7322 20.7678C10.2634 20.2989 10 19.663 10 19C10 18.6022 9.84196 18.2206 9.56066 17.9393C9.27936 17.658 8.89782 17.5 8.5 17.5C8.36739 17.5 8.24021 17.4473 8.14645 17.3536C8.05268 17.2598 8 17.1326 8 17C8 16.8674 8.05268 16.7402 8.14645 16.6464C8.24021 16.5527 8.36739 16.5 8.5 16.5C8.8283 16.5 9.15339 16.5647 9.45671 16.6903C9.76002 16.8159 10.0356 17.0001 10.2678 17.2322C10.4999 17.4644 10.6841 17.74 10.8097 18.0433C10.9353 18.3466 11 18.6717 11 19C11 19.3978 11.158 19.7794 11.4393 20.0607C11.7206 20.342 12.1022 20.5 12.5 20.5H14V20C13.9997 19.4444 14.1854 18.9047 14.5275 18.4669C13.6893 18.3519 12.9211 17.9375 12.3646 17.3003C11.8082 16.6631 11.5011 15.846 11.5 15V14.5C11.5062 13.8786 11.6717 13.2692 11.9806 12.73C11.8278 12.237 11.7788 11.7177 11.8366 11.2048C11.8945 10.6919 12.058 10.1966 12.3169 9.75C12.3608 9.67397 12.4239 9.61084 12.4999 9.56696C12.576 9.52307 12.6622 9.49998 12.75 9.5C13.3324 9.49878 13.907 9.63379 14.4279 9.89424C14.9488 10.1547 15.4015 10.5334 15.75 11H17.25C17.5985 10.5334 18.0512 10.1547 18.5721 9.89424C19.093 9.63379 19.6676 9.49878 20.25 9.5C20.3378 9.49998 20.424 9.52307 20.5001 9.56696C20.5761 9.61084 20.6392 9.67397 20.6831 9.75C20.942 10.1965 21.1055 10.6919 21.1633 11.2048C21.221 11.7177 21.1718 12.2371 21.0188 12.73C21.3283 13.269 21.494 13.8785 21.5 14.5Z"
                fill="#F5F5FA"
                fill-opacity="0.96"
              />
            </svg>
          </.link>
          <.link
            href="https://www.youtube.com/@querydeskdb"
            target="_blank"
            class="size-8 flex items-center justify-center rounded border border-gray-900"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 256 256">
              <g
                style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;"
                transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)"
              >
                <path
                  d="M 88.119 23.338 c -1.035 -3.872 -4.085 -6.922 -7.957 -7.957 C 73.144 13.5 45 13.5 45 13.5 s -28.144 0 -35.162 1.881 c -3.872 1.035 -6.922 4.085 -7.957 7.957 C 0 30.356 0 45 0 45 s 0 14.644 1.881 21.662 c 1.035 3.872 4.085 6.922 7.957 7.957 C 16.856 76.5 45 76.5 45 76.5 s 28.144 0 35.162 -1.881 c 3.872 -1.035 6.922 -4.085 7.957 -7.957 C 90 59.644 90 45 90 45 S 90 30.356 88.119 23.338 z M 36 58.5 v -27 L 59.382 45 L 36 58.5 z"
                  style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: #F9FAFB; fill-rule: nonzero; opacity: 1;"
                  transform=" matrix(1 0 0 1 0 0) "
                  stroke-linecap="round"
                />
              </g>
            </svg>
          </.link>
          <.link
            href="https://www.reddit.com/user/querydesk/"
            target="_blank"
            class="size-8 flex items-center justify-center rounded border border-gray-900"
          >
            <svg width="32" height="32" viewBox="0 0 76 76" xmlns="http://www.w3.org/2000/svg">
              <path
                fill="#F5F5FA"
                fill-opacity="0.96"
                d="M 54.5473,36.723C 54.5465,36.3898 54.4706,36.0609 54.304,35.7531L 54.3002,35.7489L 54.2985,35.7446C 54.0759,35.285 53.7267,34.9393 53.3059,34.7031C 52.8851,34.467 52.3925,34.3447 51.8983,34.3447C 51.4522,34.3447 51.0073,34.4459 50.6131,34.6441C 51.8671,35.732 52.9677,37.0434 53.6791,38.5826C 53.9081,38.3843 54.1033,38.1398 54.2492,37.8699C 54.4394,37.5157 54.5473,37.1151 54.5473,36.723 Z M 52.0539,42.1668C 52.0539,40.7964 51.561,39.4259 50.7619,38.3169C 49.1692,36.1031 46.6982,34.6567 44.1281,33.8513L 44.11,33.8429C 43.6166,33.6911 43.1182,33.5604 42.6159,33.4423C 41.1135,33.1008 39.5735,32.9321 38.0349,32.9321C 35.9686,32.9321 33.9032,33.2357 31.9247,33.8471C 29.355,34.6652 26.8764,36.0989 25.2867,38.3211L 25.2867,38.3253C 24.4813,39.4343 24.0094,40.8132 24.0094,42.1837C 24.0094,42.6897 24.0727,43.1957 24.2059,43.6891L 24.2076,43.6891C 24.4969,44.7897 25.0628,45.7764 25.7948,46.6366C 26.5268,47.4926 27.4246,48.2263 28.3696,48.8251C 28.5787,48.9558 28.7887,49.0781 29.0033,49.2004C 31.7468,50.7311 34.906,51.4015 38.0424,51.4015C 38.5729,51.4015 39.1063,51.3847 39.6334,51.3467C 42.7922,51.0853 45.9637,50.1534 48.5275,48.2474L 48.5283,48.2474C 49.3447,47.6444 50.1007,46.9107 50.6987,46.08C 51.2987,45.2493 51.7385,44.3216 51.9338,43.3138L 51.9338,43.3096L 51.9346,43.3096C 52.0156,42.93 52.0539,42.5505 52.0539,42.1668 Z M 25.4292,34.6609C 25.0206,34.4712 24.5981,34.3362 24.1806,34.3362C 24.1106,34.3362 24.0398,34.3405 23.9698,34.3489L 23.9596,34.3489L 23.9499,34.3489C 23.3503,34.3658 22.7452,34.6272 22.2911,35.0489C 21.8365,35.4664 21.5358,36.0272 21.5131,36.6512L 21.5131,36.6555L 21.5122,36.6597C 21.508,36.7103 21.5063,36.7609 21.5063,36.8073C 21.5063,37.191 21.624,37.5621 21.8234,37.8995C 21.971,38.1524 22.1646,38.3801 22.3834,38.5783C 23.0842,37.0434 24.1789,35.7446 25.4292,34.6609 Z M 47.9898,26.4677C 47.9898,26.5099 47.9907,26.5521 47.9949,26.5942L 47.9949,26.5985L 47.9949,26.6027C 48.0143,27.134 48.2647,27.6273 48.646,27.9942C 49.0293,28.3569 49.5374,28.5845 50.0527,28.5845L 50.0594,28.5845L 50.0662,28.5845L 50.1771,28.5888C 50.6978,28.5888 51.214,28.3653 51.6019,28.0026C 51.9907,27.6358 52.2471,27.1382 52.2673,26.6027L 52.2682,26.6027L 52.2682,26.5985C 52.2715,26.5563 52.2732,26.5183 52.2732,26.4762C 52.2732,25.9238 52.0156,25.4009 51.612,25.0087C 51.2102,24.6208 50.6687,24.3804 50.1353,24.3804C 49.9633,24.3804 49.7925,24.4058 49.6255,24.4564L 49.6204,24.4605L 49.6154,24.4605C 49.1756,24.5744 48.764,24.8443 48.4676,25.2069C 48.1703,25.5654 47.9898,26.0081 47.9898,26.4677 Z M 56.9922,36.47L 56.9922,36.4742C 56.9981,36.5585 56.9998,36.6386 56.9998,36.723C 56.9998,37.6422 56.7042,38.532 56.2109,39.2825C 55.7504,39.9867 55.1153,40.5771 54.3841,40.9734C 54.431,41.3403 54.4584,41.7114 54.4584,42.0782C 54.4575,44.0644 53.7731,46.0168 52.581,47.5812L 52.5789,47.5812C 50.3757,50.5118 46.9925,52.2407 43.5761,53.1094L 43.5753,53.1094L 43.5727,53.1136C 41.7511,53.5563 39.8725,53.7798 37.9948,53.7798C 35.1953,53.7798 32.3974,53.278 29.7877,52.2281L 29.7868,52.2281L 29.7843,52.2281C 27.078,51.1106 24.4994,49.3395 22.9181,46.742C 22.0672,45.3547 21.6004,43.727 21.6004,42.0951C 21.6004,41.724 21.6248,41.353 21.6746,40.9903C 20.9619,40.5855 20.345,40.0205 19.8871,39.3416C 19.3979,38.6078 19.0884,37.756 19.0488,36.8536L 19.0488,36.8494L 19.0488,36.8453L 19.0488,36.8368C 19.0496,35.5718 19.5991,34.3742 20.453,33.4929C 21.3069,32.6074 22.4732,32.0297 23.7244,32.0297L 23.7762,32.0297C 23.9069,32.0212 24.0398,32.017 24.1722,32.017C 24.8009,32.017 25.4309,32.1182 26.0288,32.3502L 26.0322,32.3502L 26.0351,32.3502C 26.5458,32.5652 27.0531,32.8266 27.5055,33.1851C 27.6518,33.1091 27.8117,33.0206 27.9913,32.9531C 30.7322,31.3297 33.918,30.7056 37.0228,30.5243C 37.0498,28.9852 37.2387,27.3743 37.9889,25.9659C 38.6138,24.7937 39.6979,23.8828 40.9891,23.5666L 40.9942,23.5666L 41.0009,23.5666C 41.4926,23.4696 41.9881,23.4274 42.4806,23.4274C 43.7929,23.4274 45.0891,23.7352 46.3022,24.2202C 46.8391,23.4105 47.6061,22.778 48.5051,22.4238L 48.5135,22.4196L 48.522,22.4154C 49.0495,22.2509 49.6074,22.154 50.1674,22.154C 50.7577,22.154 51.3523,22.2636 51.9102,22.5124L 51.9102,22.5082L 51.9118,22.5124L 51.9224,22.5166C 52.7219,22.8245 53.3983,23.3937 53.8777,24.0979C 54.3576,24.8105 54.6401,25.6623 54.6401,26.5352C 54.6401,26.6954 54.6312,26.8557 54.6123,27.0201L 54.6106,27.0244L 54.6097,27.0328C 54.5157,28.1629 53.9435,29.1538 53.133,29.858C 52.3175,30.5707 51.262,31.0008 50.1779,31.0008C 50.0042,31.0008 49.8288,30.9881 49.6542,30.967C 48.5793,30.8827 47.577,30.364 46.8407,29.5881C 46.102,28.8165 45.6259,27.7833 45.6259,26.6702C 45.6259,26.6196 45.631,26.5605 45.6326,26.5099C 44.6236,26.0587 43.5521,25.6876 42.4873,25.6876C 42.3334,25.6876 42.1795,25.6961 42.0252,25.7129L 42.0235,25.7129C 41.2265,25.7888 40.4852,26.2906 40.1259,27.0117L 40.1259,27.0159L 40.1259,27.0159C 39.5807,28.0786 39.4723,29.3183 39.4559,30.5538C 42.5122,30.752 45.5867,31.4857 48.2829,33.0333L 48.2871,33.0333L 48.3259,33.0585C 48.3769,33.0881 48.4714,33.1387 48.5574,33.1851C 48.7425,33.0333 48.9386,32.8815 49.1617,32.7465C 49.9797,32.2026 50.9479,31.9327 51.9165,31.9327C 52.3466,31.9327 52.7771,31.9875 53.195,32.0929L 53.1963,32.0929L 53.2136,32.0972L 53.2296,32.1014L 53.2296,32.1014C 54.2159,32.3544 55.109,32.9194 55.7807,33.6827C 56.452,34.4501 56.9041,35.4158 56.9922,36.47 Z M 31.3905,42.4283L 31.4018,42.4283C 31.643,42.5168 31.8918,42.559 32.1381,42.559C 32.7525,42.559 33.3496,42.3102 33.8016,41.9012C 34.2532,41.4879 34.5619,40.906 34.5619,40.244L 34.5611,40.1891L 34.5636,40.0922C 34.5636,39.4343 34.2587,38.8482 33.8117,38.4392C 33.3627,38.0217 32.7672,37.7687 32.1503,37.7687C 31.9859,37.7687 31.8176,37.7898 31.654,37.8277L 31.6473,37.8277L 31.6447,37.8277C 30.8288,38.0007 30.1119,38.6036 29.8475,39.4385L 29.8467,39.4428C 29.7712,39.6705 29.7358,39.9066 29.7358,40.1385C 29.7358,40.653 29.9045,41.1464 30.1954,41.5596C 30.4834,41.9602 30.892,42.2764 31.382,42.424M 44.6657,45.4938C 44.4713,45.3674 44.2466,45.2914 44.0083,45.2914C 43.8165,45.2914 43.6174,45.3463 43.4403,45.4643C 41.7633,46.4637 39.7907,47.0119 37.8333,47.0119C 36.3641,47.0119 34.9039,46.704 33.5811,46.0547L 33.5743,46.0505L 33.568,46.0462C 33.3685,45.9661 33.1413,45.7933 32.8933,45.6288C 32.7672,45.5444 32.6357,45.4643 32.4898,45.4053C 32.3456,45.342 32.1857,45.2999 32.0145,45.2999C 31.8729,45.2999 31.724,45.3336 31.5773,45.3969L 31.5549,45.4053L 31.5557,45.4053C 31.3251,45.4938 31.145,45.6583 31.0286,45.8481C 30.9076,46.0462 30.8482,46.274 30.8482,46.5016C 30.8482,46.7083 30.8971,46.9149 30.9975,47.1004C 31.0932,47.2776 31.2403,47.4336 31.4331,47.5348C 33.3243,48.8124 35.5503,49.3902 37.7856,49.386C 39.8008,49.386 41.8278,48.9221 43.633,48.0703L 43.6427,48.0661L 43.652,48.0619C 43.8898,47.9185 44.2061,47.792 44.5042,47.6107C 44.6518,47.5137 44.796,47.4083 44.9196,47.2649C 45.0431,47.1257 45.1426,46.9529 45.1987,46.7462L 45.1987,46.7462C 45.2215,46.6534 45.2333,46.5649 45.2333,46.4806C 45.2333,46.3119 45.192,46.1517 45.1237,46.0083C 45.0216,45.7975 44.8576,45.6204 44.6657,45.4938 Z M 46.1829,39.3795C 46.2808,39.6283 46.3254,39.8898 46.3254,40.147C 46.3254,40.6614 46.1467,41.1675 45.8469,41.5765C 45.5504,41.9813 45.1304,42.2933 44.6362,42.4325L 44.6371,42.4325L 44.6261,42.4367L 44.6198,42.4367C 44.3883,42.5168 44.1509,42.5547 43.9156,42.5547C 43.3636,42.5547 42.8217,42.3566 42.3887,42.015C 41.9586,41.6777 41.6334,41.1927 41.531,40.6193L 41.5301,40.6193L 41.5297,40.6108L 41.528,40.6066L 41.5297,40.6066C 41.4972,40.459 41.4808,40.3114 41.4808,40.1639C 41.4808,39.6663 41.6507,39.1855 41.9307,38.7934C 42.2099,38.397 42.6033,38.085 43.0638,37.9247L 43.0671,37.9247L 43.0714,37.9247C 43.3324,37.8277 43.6073,37.7771 43.8793,37.7771C 44.3752,37.7771 44.8635,37.9289 45.2751,38.203C 45.682,38.4729 46.0121,38.8693 46.1779,39.3627L 46.1812,39.3711L 46.1846,39.3795L 46.1829,39.3795 Z "
              >
              </path>
            </svg>
          </.link>
        </div>

        <p class="text-gray-900">
          We're a team of developers, engineers, and product thinkers who've experienced the pain of database operations firsthand. We’ve been in the trenches of bad queries and worse tools, and are tired of duct-taping our way through production. We've been there, done that, and debugged the aftermath. Yes, we've also cursed at a query or two.
        </p>
      </div>
    </div>
  </div>
</div>

<.simple_form id="waf" for={%{}} action="/auth/mfa" method="post">
  <.input type="hidden" id="rawId" name="rawId" value="" />
  <.input type="hidden" id="type" name="type" value="" />
  <.input type="hidden" id="clientDataJSON" name="clientDataJSON" value="" />
  <.input type="hidden" id="authenticatorData" name="authenticatorData" value="" />
  <.input type="hidden" id="sig" name="sig" value="" />
</.simple_form>

<script nonce={@csp_nonce}>
  function _arrayBufferToString( buffer ) {
    var binary = '';
    var bytes = new Uint8Array( buffer );
    var len = bytes.byteLength;
    for (var i = 0; i < len; i++) {
      binary += String.fromCharCode( bytes[ i ] );
    }
    return binary;
  }

  function _arrayBufferToBase64( buffer ) {
    var binary = '';
    var bytes = new Uint8Array( buffer );
    var len = bytes.byteLength;
    for (var i = 0; i < len; i++) {
      binary += String.fromCharCode( bytes[ i ] );
    }
    return window.btoa( binary );
  }

  function _base64ToArrayBuffer(base64) {
      var binary_string =  window.atob(base64);
      var len = binary_string.length;
      var bytes = new Uint8Array( len );
      for (var i = 0; i < len; i++)        {
          bytes[i] = binary_string.charCodeAt(i);
      }
      return bytes.buffer;
  }

  const manualButton = document.getElementById('manual-button')

  manualButton.addEventListener('click', function() {
    triggerAuthenticate();
  });

  function triggerAuthenticate(){
    navigator.credentials.get({
      publicKey: {
        challenge: _base64ToArrayBuffer("<%= @challenge %>"),

        allowCredentials: [
        <%= for cred_id <- @cred_ids do %>
          {
            id: _base64ToArrayBuffer("<%= cred_id %>"),
            type: "public-key"
          },
        <% end %>
        ]
      }
    }).then((newCredential) => {
      document.getElementById('rawId').value = _arrayBufferToBase64(newCredential.rawId);
      document.getElementById('type').value = newCredential.type;
      document.getElementById('clientDataJSON').value =
        _arrayBufferToString(newCredential.response.clientDataJSON)
      document.getElementById('authenticatorData').value =
        _arrayBufferToBase64(newCredential.response.authenticatorData)
      document.getElementById('sig').value =
        _arrayBufferToBase64(newCredential.response.signature)

      document.getElementById('waf').submit();
    }).catch((err) => {
      console.log(err);
    });
  }
</script>
